tasks:
  composer:
    usage: download and install libraries
    args:
      command:
        usage: the command that composer will run
    options:
      ignore:
        usage: use ignore-platform-reqs
        short: g
        type: bool
    run:
      - when:
          equal: {ignore: true}
        command: mkdir -p ~/.cache/composer/files ~/.cache/composer/repo && docker run --rm -it -u $(id -u):$(id -g) -v ~/.cache/composer/:/tmp/cache/ -v $PWD:/app composer ${command} --ignore-platform-reqs
      - when:
          equal: {ignore: false}
        command: mkdir -p ~/.cache/composer/files ~/.cache/composer/repo && docker run --rm -it -u $(id -u):$(id -g) -v ~/.cache/composer/:/tmp/cache/ -v $PWD:/app composer ${command}

  app:
    usage: access app container and execute commands
    args:
      command:
        usage: the command that app will run
    run: docker compose exec app ${command}

  webserver:
    usage: access webserver container
    run: docker compose exec webserver bash

  database:
    usage: access database container
    run: docker compose exec database bash

  node:
    usage: access app container and execute commands
    args:
      command:
        usage: the command that app will run
    run: docker compose exec node ${command}

  sass:
    usage: access app container and execute commands
    args:
      command:
        usage: the command that app will run
    run: docker compose exec node sass ${command}

  app-logs:
    usage: access app container logs
    run: docker compose logs app

  webserver-logs:
    usage: access webserver container logs
    run: docker compose logs webserver

  database-logs:
    usage: access database container logs
    run: docker compose logs database

  start:
    usage: start project containers
    run: docker compose start

  stop:
    usage: stop project containers
    run: docker compose stop

  restart:
    usage: restart project containers
    run: docker compose restart

  up:
    usage: create project containers and start then
    run: docker compose up -d

  down:
    usage: stop and delete project containers
    options:
      v:
        usage: remove docker volumes
        type: bool
    run:
      - when:
          equal: {v: true}
        command: docker compose down -v
      - when:
          equal: {v: false}
        command: docker compose down

  add-host:
    usage: add hosts for docker containers
    args:
      container:
        usage: the container to be used
      host:
        usage: the host that will be added
    run: sudo ./.docker/add-hosts ${container} ${host}